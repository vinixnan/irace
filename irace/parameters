## Parameter configuration file for Iterated Race.
##
## The format is one parameter per line. Each line contains:
##
## 1: Name of the parameter. An unquoted alphanumeric string,
##    example: ants

## 2: Switch to pass the parameter. A quoted (possibly empty) string, 
##    if the value and the switch must be separated, add a space at
##    the end of the string. Example : "--version1 --ants "

## 3: Type. An unquoted single letter, among 
##     i: Integer, c: categorical, o: ordinal, r: real.

## 4: For c and o: All possible values, that is, a variable number of
##    quoted or unquoted strings separated by commas within
##    parenthesis. Empty strings and strings containing commas or
##    spaces must be quoted.
##    For i,r: a pair of unquoted numbers representing minimum and
##    maximum values. 

## 5: A conditional parameter can be defined according to the values of
##    one or several other parameters.  This is done by adding a
##    character '|' followed by an R expression involving the names of
##    other parameters. This expression must return TRUE if the 
##    condition is satisfied, FALSE otherwise.

## ----> Leave a blank line in the end like EOF <----

# 1:                 2:                        3: 4:      5:
algorithm            "--algorithm "            o  ("NSGA-II")
populationSize       "--populationSize="       c  (100)
maxEvaluations       "--maxEvaluations="       c  (10000)
selectionOperator    "--selectionOperator="    c  ("BinaryTournamentSelection")
tournamentSize       "--tournamentSize "       c  (2,4,6,8,10) | selectionOperator == 'KTournament'
crossoverOperator    "--crossoverOperator="    c  ("SBXCrossover","BLXAlphaCrossover")
crossoverProbability "--crossoverProbability=" r  (0.00,1)
mutationOperator     "--mutationOperator="     c  ("PolynomialMutation","UniformMutation","NonUniformMutation")
mutationProbability  "--mutationProbability "  r  (0.00,1)
alpha "--alpha=" r  (0.00,1) | crossoverOperator == 'BLXAlphaCrossover'
distributionIndexCross "--distributionIndexCross=" r  (0.00,100) | crossoverOperator == 'SBXCrossover'
distributionIndexMuta "--distributionIndexMuta=" r  (0.00,100) | mutationOperator == 'PolynomialMutation'
pertubation "--pertubation=" r  (0.00,1) | mutationOperator != "PolynomialMutation"

